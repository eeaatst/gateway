# compose.yaml
version: '3.8'

services:
  # 1. nginx Unit (Reverse Proxy)
  gateway:
    image: localhost/pep-gateway
    container_name: gateway
    ports:
      - "9080:9080"
    # volumes:
    #   # Tüm mantığı içeren tek Python dosyamızı mount ediyoruz
    #   #- ./gateway.py:/app/gateway.py
    #   # Unit konfigürasyonunu mount ediyoruz
    #   - ./unit.config.json:/docker-entrypoint.d/config.json
    # environment:
    #   # Gateway'imiz için gerekli ortam değişkenleri
    #   - KEYCLOAK_URL=http://keycloak:8080
    #   - KEYCLOAK_REALM=demo
    #   - OIDC_CLIENT_ID=nginx
    #   - OIDC_CLIENT_SECRET=zS3jyd6dJbrABOezuk2FdNYfCv68pMXZ # Keycloak'tan alacağınız secret
    #   - OIDC_CALLBACK_URL=http://app.localhost:9080/_callback
    #   - BACKEND_SERVICE_URL=http://httpbin:80
    # depends_on:
    #   - httpbin
    #   - keycloak
    command: mitmdump -s gateway.py --mode reverse:http://httpbin:80 --listen-host 0.0.0.0 --listen-port 9080
    # YENİ EKLENEN BÖLÜM: Kodu container'a mount ediyoruz
    volumes:
      - ./app:/app
    environment:
      # Python script'imizin ihtiyaç duyduğu değişkenler
      - KEYCLOAK_URL=http://keycloak:8080
      - KEYCLOAK_REALM=demo
      - OIDC_CLIENT_ID=nginx
      - OIDC_CLIENT_SECRET=zS3jyd6dJbrABOezuk2FdNYfCv68pMXZ
      - OIDC_CALLBACK_URL=http://app.localhost:9080/_callback
    depends_on:
      - httpbin
      - keycloak
    
  # 2. Keycloak (Kimlik Doğrulama Sunucusu)
  keycloak:
    image: quay.io/keycloak/keycloak:26.1.2
    command: start-dev
    environment:
      KC_DB: postgres
      KC_DB_URL_HOST: postgres
      KC_DB_URL_DATABASE: keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: password
      KC_DB_SCHEMA: public
      KC_HOSTNAME: keycloak.localhost
      KC_HOSTNAME_ADMIN_URL: kcadmin.localhost
      KC_PROXY_HEADERS: xforwarded
      KC_HOSTNAME_STRICT: "false"
      KC_HOSTNAME_STRICT_BACKCHANNEL: "false"
      KC_HTTP_ENABLED: "true"
      KC_HTTP_PORT: 8080
      KC_HEALTH_ENABLED: "true"
      KC_METRICS_ENABLED: "true"
      KEYCLOAK_ADMIN: kcadmin
      KEYCLOAK_ADMIN_PASSWORD: aa
      KC_LOG_LEVEL: INFO
    ports:
      - "9000:9000"
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://keycloak:9000/health/live"]
      interval: 10s
      timeout: 10s
      retries: 20
    
  postgres:
    image: docker.io/postgres:15-alpine
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U keycloak"]
      interval: 10s
      timeout: 5s
      retries: 5

     

  # 4. Backend (Korunan Arka Uç Servisi)
  httpbin:
    image: kennethreitz/httpbin
    container_name: my-httpbin-backend
        

volumes:
  postgres_data: